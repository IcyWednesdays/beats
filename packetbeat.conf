###
### PacketBeat configuration file.
###
### PacketBeat is a protocol monitoring service that
### works by sniffing the network traffic between your application
### components. It dumps the results into elasticsearch. 
###
### Go to http://packetbeat.com/gettingstarted for more details.
###

[interfaces]
# Select on which network interfaces to sniff. You can use the "any"
# keyword to sniff on all connected interfaces.
device = "any"

[elasticsearch]
# Set the host and port where to find ElasticSearch. Most likely you
# need to change the port.
host = "localhost"
port = 9200

# Configure which protocols to monitor and on which ports are they
# running. You can disable a given protocol by commenting out its
# configuration.
[protocols]
  [protocols.http]
  ports = [80, 8080, 8081, 5000, 8002]

  [protocols.mysql]
  ports = [3306]

  [protocols.redis]
  ports = [6379]

[procs]
# Uncomment the following line to disable reading the processes from
# the proc file system.
# dont_read_from_proc = true

# Which processes to monitor and how to find them. The processes can
# be found by searching their command line by a given string.
  [procs.monitored.mysqld]
  cmdline_grep = "mysqld"

  [procs.monitored.nginx]
  cmdline_grep = "nginx"

[agent]
# The name of the agent as it will show up in the web interface. If not
# defined, we will just use the hostname.
#
#name=

[runoptions]
# The PacketBeats agent can drop privileges after creating the sniffing
# socket. Root access is required for opening the socket but everything
# else requires no privileges. Therefore, it is strongly recommended
# to have the Agent switch users after the initialization phase.
# The following two settings set the User Id and the Group Id under 
# which the Agent will run.
# Warning: Because on Linux Setuid doesn't change the uid of all threads,
# the Go garbage collector will continue to run as root.
#uid=501
#gid=501

[logging]
# These are debug helpers to control the verbosity of logging.
selectors = ["pinger"]

# vim: set ft=toml:
