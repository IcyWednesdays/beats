[[getting-started]]
== Getting started

A regular _Beats setup_ consists of:

 * Beats shippers to collect the data. You should install these on
   your servers so that they capture the data.
 * Elasticsearch for storage and indexing. <<elasticsearch-installation>>
 * Optionally Logstash. <<logstash-installation>>
 * Kibana for the UI. <<kibana-installation>>
 * Kibana dashboards to customize your widgets. <<load-kibana-dashboards>>

NOTE:  For now, you can just install Elasticsearch and Kibana on a single VM or even
on your laptop. The only condition is that this machine is accessible from the
servers you want to monitor. As you add more shippers and your traffic grows, you
will want replace the single Elasticsearch instance with a cluster. You will
probably also want to automate the installation process.  But for now, let's
just do the fun part.

[[elasticsearch-installation]]
=== Elasticsearch installation

https://www.elastic.co/products/elasticsearch[Elasticsearch] is a distributed real-time
storage, search and analytics engine. It can be used for many purposes, but one
context where it excels is indexing streams of semi-structured data, like logs
or decoded network packets.

The binary packages of Elasticsearch have only one dependency: Java. Choose the
tab that fits your system (deb for Debian/Ubuntu, rpm for Redhat/Centos/Fedora,
mac for OS X):

deb:

["source","sh",subs="attributes,callouts"]
----------------------------------------------------------------------
sudo apt-get install openjdk-7-jre
curl -L -O https://download.elastic.co/elasticsearch/elasticsearch/elasticsearch-{ES-version}.deb
sudo dpkg -i elasticsearch-{ES-version}.deb
sudo /etc/init.d/elasticsearch start
----------------------------------------------------------------------

rpm:

["source","sh",subs="attributes,callouts"]
----------------------------------------------------------------------
sudo yum install java-1.7.0-openjdk
curl -L -O https://download.elastic.co/elasticsearch/elasticsearch/elasticsearch-{ES-version}.noarch.rpm
sudo rpm -i elasticsearch-{ES-version}.noarch.rpm
sudo service elasticsearch start
----------------------------------------------------------------------

mac:

["source","sh",subs="attributes,callouts"]
----------------------------------------------------------------------
# install Java, e.g. from: https://www.java.com/en/download/manual.jsp
curl -L -O https://download.elastic.co/elasticsearch/elasticsearch/elasticsearch-{ES-version}.zip
unzip elasticsearch-{ES-version}.zip
cd elasticsearch-{ES-version}
./bin/elasticsearch
----------------------------------------------------------------------

You can learn more about installing, configuring and running Elasticsearch in
http://www.elastic.co/guide/en/elasticsearch/guide/current/_installing_elasticsearch.html[Elasticsearch: The Definitive Guide].


To test that the Elasticsearch daemon is up and running, try sending a HTTP GET
request on port 9200:

[source,shell]
----------------------------------------------------------------------
curl http://127.0.0.1:9200
{
  "status" : 200,
  "name" : "Unicorn",
  "cluster_name" : "elasticsearch",
  "version" : {
    "number" : "1.4.3",
    "build_hash" : "36a29a7144cfde87a960ba039091d40856fcb9af",
    "build_timestamp" : "2015-02-11T14:23:15Z",
    "build_snapshot" : false,
    "lucene_version" : "4.10.3"
  },
  "tagline" : "You Know, for Search"
}
----------------------------------------------------------------------


[[logstash-installation]]
=== Logstash Installation

The simplest architecture for the Beat platform setup consists of the Beats
shippers, Elasticsearch and Kibana. This is nice and easy to get started with
and enough for networks with small traffic. It also uses the minimum amount of
servers: a single machine running Elasticsearch + Kibana. The Beat shippers
insert the transactions directly into the Elasticsearch instance.

This article explains how to use the Beat together with Logstash to provide
additional buffering. Another important advantage is that you have
the opportunity in Logstash to modify the data captured by Beat any way you
like. You can also use Logstash's many output plugins to integrate with other
systems.

image:./images/beats-logstash.png[Integration with Logstash]

To download, install and run Logstash pick your platform and follow the steps below:

deb:

["source","sh",subs="attributes,callouts"]
----------------------------------------------------------------------
sudo apt-get install openjdk-7-jre
curl -L -O https://download.elastic.co/logstash/logstash/packages/debian/logstash_{LS-version}-1_all.deb
sudo dpkg -i logstash-{LS-version}-1_all.deb
sudo /etc/init.d/logstash start
----------------------------------------------------------------------

rpm:

["source","sh",subs="attributes,callouts"]
----------------------------------------------------------------------
sudo yum install java-1.7.0-openjdk
curl -L -O https://download.elastic.co/logstash/logstash/packages/centos/logstash-{LS-version}-1.noarch.rpm
sudo rpm -i lgostash-{LS-version}-1.noarch.rpm
sudo service logstash start
----------------------------------------------------------------------

mac:

["source","sh",subs="attributes,callouts"]
----------------------------------------------------------------------
# install Java, e.g. from: https://www.java.com/en/download/manual.jsp
curl -L -O https://download.elastic.co/logstash/logstash/logstash-{LS-version}.zip
unzip logstash-{LS-version}.zip
cd logstash-{LS-version}
./bin/logstash
----------------------------------------------------------------------

You can learn more about installing, configuring and running Logstash
https://www.elastic.co/guide/en/logstash/current/getting-started-with-logstash.html[here].



==== Logstash Setup

In this setup, the Beat shippers send events to Logstash. Logstash receives
these events using the
https://github.com/logstash-plugins/logstash-input-beats[Beats
input plugin] and then sends the transaction to Elasticsearch using the
http://www.elastic.co/guide/en/logstash/current/plugins-outputs-elasticsearch.html[Elasticsearch
output plugin]. The Elasticsearch plugin of Logstash uses the bulk API, making indexing very efficient.

Note: The mininum required Logstash version for this plugin is 1.5.4.
If Logstash 1.5.4 is installed, the beats input plugin must be installed
prior to applying this configuration as the plugin is not shipped with 1.5.4.
To install the required plugin run the following command inside the logstash
directory. In case you used deb or rpm for installation, run the logstash
plugin executable instead.


["source","sh",subs="attributes,callouts"]
----------------------------------------------------------------------
./bin/plugin install logstash-input-beats
----------------------------------------------------------------------

To use this setup, disable the Elasticsearch output and use instead the
<<logstash-output,Logstash output>> in the Beat configuration file:

[source,yaml]
------------------------------------------------------------------------------
output:
  logstash:
    enabled: true

    hosts: ["127.0.0.1:5044"]

    # configure logstash plugin to loadbalance events between
    # configured logstash hosts
    #loadbalance: false
------------------------------------------------------------------------------

Next configure Logstash to listen on Port 5044 for incoming beats connections
and index into Elasticsearch. The Beats platform sends the index and document
type that the Beat would use for indexing into Elasticsearch as additional meta data.
Here is an example configuration that you can save in your `conf.json` file:

[source,ruby]
------------------------------------------------------------------------------
input {
  beats {
    port => 5044
  }
}

output {
  elasticsearch {
    protocol => "http"
    host => "localhost"
    port => "9200"
    sniffing => true
    manage_template => false
    index => "%{[@metadata][index]}"
    document_type => "%{[@metadata][type]}"
  }
}
------------------------------------------------------------------------------

Using this configuration Logstash will index events in Elasticsearch the same
way the Beat would do.

Now you can start logstash with:

["source","sh",subs="attributes,callouts"]
----------------------------------------------------------------------
./bin/logstash -f config.json
----------------------------------------------------------------------

Adjust the path to your configuration file. In case you installed logstash
as deb or rpm package, place to config file in the expected directory.

Note: Default configuration in Beat and Logstash uses plain TCP. For encryption
TLS must be explicitly enabled in Beat and Logstash configuration.


[[kibana-installation]]
=== Kibana installation

https://www.elastic.co/products/kibana[Kibana] is a visualization application
that gets its data from Elasticsearch. It provides a customizable and
user-friendly UI in which you can combine various widget types to create your
own dashboards. The dashboards can be easily saved, shared and linked.

For this tutorial, we recommend to install Kibana on the same server as
Elasticsearch, but it is not required.

Use the following commands to download and run Kibana:

deb or rpm:

["source","sh",subs="attributes,callouts"]
----------------------------------------------------------------------
curl -L -O https://download.elastic.co/kibana/kibana/kibana-{Kibana-version}-linux-x64.tar.gz
tar xzvf kibana-{Kibana-version}-linux-x64.tar.gz
cd kibana-{Kibana-version}-linux-x64/
./bin/kibana
----------------------------------------------------------------------

mac:

["source","sh",subs="attributes,callouts"]
----------------------------------------------------------------------
curl -L -O https://download.elastic.co/kibana/kibana/kibana-{Kibana-version}-darwin-x64.tar.gz
tar xzvf kibana-{Kibana-version}-darwin-x64.tar.gz
cd kibana-{Kibana-version}-darwin-x64/
./bin/kibana
----------------------------------------------------------------------

You can find Kibana binaries for other operating systems on the
https://www.elastic.co/downloads/kibana[Kibana downloads page].

If Kibana cannot reach the Elasticsearch server, you can adjust the settings for
it from the `config/kibana.yml` file.

Now point your browser to port 5601 and you should see the Kibana web
interface.

You can learn more about Kibana in the
http://www.elastic.co/guide/en/kibana/current/index.html[Kibana User Guide].

[[load-kibana-dashboards]]
==== Load Kibana dashboards

Kibana has a large set of visualization types which you can combine to create
the perfect dashboards for your needs. But this flexibility can be a bit
overwhelming at the beginning, so we have created a couple of
https://github.com/elastic/beats-dashboards[Sample Dashboards] to give you a good start and to
demonstrate what is possible based on the packet data.

NOTE: Make sure your Kibana version works with your Elasticsearch version. See the table below.

.Kibana versions compatible with the Elasticsearch versions
|===
|Kibana version |Elasticsearch version

|Kibana 4.1.x
|Elasticsearch 1.7.3

|Kibana 4.2.0
|Elasticsearch 2.0.0
|===


To load the sample pages, follow these steps:

["source","sh",subs="attributes,callouts"]
----------------------------------------------------------------------
curl -L -O http://download.elastic.co/beats/dashboards/beats-dashboards-{Dashboards-version}.tar.gz
tar xzvf beats-dashboards-{Dashboards-version}.tar.gz
cd beats-dashboards-{Dashboards-version}/
./load.sh
----------------------------------------------------------------------

NOTE: In case the Elasticsearch is not running on `127.0.0.1:9200`, you need to specify the Elasticsearch location
as argument of the load.sh command line:

[source,shell]
-------------------------------------------------------------------------
./load.sh http://192.168.33.60:9200
-------------------------------------------------------------------------

The load command uploads the example dashboards with the visualizations and searches that can be used.
Additionally, the index patterns for Packetbeat and Topbeat are created:

   - [packetbeat-]YYYY.MM.DD
   - [topbeat-]YYYY.MM.DD
   - [filebeat-]YYYY.MM.DD

After loading the dashboards, Kibana rises the following error
`No default index pattern. You must select or create one to continue.` that can be solved
by setting one index pattern as favorite.

image:./images/kibana-created-indexes.png[Kibana configured indexes]

To open the loaded dashboards, go to the `Dashboard` page and click the "Open"
icon. Select `Packetbeat Dashboard` from the list. You can then switch easier
between the dashboards by using the `Navigation` widget.

image:./images/kibana-navigation-vis.png[Navigation widget in Kibana]


Enjoy!
