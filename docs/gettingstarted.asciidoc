
[[packetbeat-getting-started]]
== Getting started


The best way to understand the value of an application monitoring system like
Packetbeat is to try it on your own traffic. This quick tutorial will walk you
through installing the essential components of the Packetbeat system:

 * Packetbeat agents. They collect the traffic. You should install these on
   your servers so that they capture the network traffic.
 * Elasticsearch for storage and indexing.
 * Kibana for the UI.

////
TODO: add a real reference to Packetbeat Deploy
////

NOTE:  We now have Packetbeat Deploy, a project that automates the
installation of all these components. Using Packetbeat Deploy might be actually
easier then following this guide, and the resulting installation will be much
easier to maintain and scale.

For now, you can just install Elasticsearch and Kibana on a single VM or even
on your laptop. The only condition is that this machine is accessible from the
servers you want to monitor. As you add more agents and your traffic grows, you
will want replace the single Elasticsearch instance with a cluster. You will
probably also want to automate the installation process.  But for now, let's
just do the fun part.

=== Elasticsearch installation


http://www.elasticsearch.org/[Elasticsearch] is a distributed real-time
storage, search and analytics engine. It can be used for many purposes, but one
context where it excels is indexing streams of semi-structured data, like logs
or decoded network packets.

The binary packages of Elasticsearch have only one dependency: Java. Choose the
tab that fits your system (deb for Debian/Ubuntu, rpm for Redhat/Centos/Fedora,
binary for the others, including OS X):

deb:

[source,shell]
----------------------------------------------------------------------
$ sudo apt-get install openjdk-7-jre
$ curl -L -O https://download.elasticsearch.org/elasticsearch/elasticsearch/elasticsearch-$ES_VERSION.deb
$ sudo dpkg -i elasticsearch-$ES_VERSION.deb
$ sudo /etc/init.d/elasticsearch start
----------------------------------------------------------------------

rpm:

[source,shell]
----------------------------------------------------------------------
$ sudo yum install java-1.7.0-openjdk
$ curl -L -O https://download.elasticsearch.org/elasticsearch/elasticsearch/elasticsearch-$ES_VERSION.rpm
$ sudo rpm -i elasticsearch-$ES_VERSION.rpm
$ sudo service elasticsearch start
----------------------------------------------------------------------

binary:

[source,shell]
----------------------------------------------------------------------
$ # install Java, e.g. from: https://www.java.com/en/download/manual.jsp
$ curl -L -O https://download.elasticsearch.org/elasticsearch/elasticsearch/elasticsearch-$ES_VERSION.zip
$ unzip elasticsearch-$ES_VERSION.zip
$ cd elasticsearch-$ES_VERSION
$ ./bin/elasticsearch
----------------------------------------------------------------------


To test that the Elasticsearch daemon is up and running, try sending a HTTP GET
request on port 9200:

[source,shell]
----------------------------------------------------------------------
$ curl http://127.0.0.1:9200
{
  "status" : 200,
  "name" : "Unicorn",
  "cluster_name" : "elasticsearch",
  "version" : {
    "number" : "1.4.3",
    "build_hash" : "36a29a7144cfde87a960ba039091d40856fcb9af",
    "build_timestamp" : "2015-02-11T14:23:15Z",
    "build_snapshot" : false,
    "lucene_version" : "4.10.3"
  },
  "tagline" : "You Know, for Search"
}
----------------------------------------------------------------------

=== Packetbeat agent

Now that you have Elasticsearch running, I'm sure you are eager to put some
data in it. For this, install the Packetbeat agents on your application
servers:

deb:

[source,shell]
----------------------------------------------------------------------
$ sudo apt-get install libpcap0.8
$ curl -L -O https://github.com/packetbeat/packetbeat/releases/download/v$PB_VERSION/packetbeat_$PB_VERSION-1_amd64.deb
$ sudo dpkg -i packetbeat_$PB_VERSION-1_amd64.deb
----------------------------------------------------------------------

rpm:

[source,shell]
----------------------------------------------------------------------
$ sudo yum install libpcap
$ curl -L -O https://github.com/packetbeat/packetbeat/releases/download/v$PB_VERSION/packetbeat-$PB_VERSION-1.el6.x86_64.rpm
$ sudo rpm -vi packetbeat-$PB_VERSION-1.el6.x86_64.rpm
----------------------------------------------------------------------


binary:

[source,shell]
----------------------------------------------------------------------
$ # install libpcap using your operating system package manager
$ curl -L -O https://github.com/packetbeat/packetbeat/releases/download/v$PB_VERSION/packetbeat-$PB_VERSION-x86_64.tar.gz
$ tar xzvf packetbeat-$PB_VERSION-x86_64.tar.gz
----------------------------------------------------------------------

////
TODO: add a link to the download page.
////
NOTE: We also provide 32bits images. You can get them from our download page.


Before starting the agent, edit the configuration file:

[source,shell]
----------------------------------------------------------------------
$ nano /etc/packetbeat/packetbeat.conf
----------------------------------------------------------------------

First, set the IP address and port where the agent can find the Elasticsearch
installation:

[source,yaml]
----------------------------------------------------------------------
output:

  elasticsearch:
	# Uncomment out this option if you want to output to Elasticsearch. The
	# default is false.
    enabled: true

    # Set the host and port where to find Elasticsearch.
    host: 192.168.1.42
    port: 9200

    # Comment this option if you don't want to store the topology in
    # Elasticsearch. The default is false.
    save_topology: true
----------------------------------------------------------------------

Select the network interface from which to capture the traffic. Packetbeat
supports capturing all messages sent or received by the server on which it is
installed. For this, use `any` as the device:


[source,yaml]
----------------------------------------------------------------------
interfaces:
  # Select on which network interfaces to sniff. You can use the "any"
  # keyword to sniff on all connected interfaces.
  device: any
----------------------------------------------------------------------

In the next section, configure the ports on which Packetbeat can find each
protocol. If you use any non-standard ports, add them here. Otherwise, the
default values should do just fine.


[source,yaml]
----------------------------------------------------------------------
protocols:
  # Configure which protocols to monitor and on which ports are they
  # running. You can disable a given protocol by commenting out its
  # configuration.
  http:
    ports: [80, 8080, 8081, 5000, 8002]

  mysql:
    ports: [3306]

  redis:
    ports: [6379]

  pgsql:
    ports: [5432]

  thrift:
    ports: [9090]
----------------------------------------------------------------------


An
http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/indices-templates.html[index
template] is used to tell Elasticsearch which fields should be analyzed in which way. The recommended
template file can be found
https://github.com/packetbeat/packetbeat/blob/v$PACKETBEAT_VERSION/etc/packetbeat.template.json[here].
Grab it and load it with the following commands:


[source,shell]
----------------------------------------------------------------------
curl -L -O
'https://raw.githubusercontent.com/packetbeat/packetbeat/v$PB_VERSION/etc/packetbeat.template.json'
curl -XPUT 'http://localhost:9200/_template/packetbeat' -d@packetbeat.template.json
----------------------------------------------------------------------

where `localhost:9200` is the IP and port where Elasticsearch is listening on.

You are now ready to start the agent:

deb:

[source,shell]
----------------------------------------------------------------------
$ /etc/init.d/packetbeat restart
----------------------------------------------------------------------

rpm:

[source,shell]
----------------------------------------------------------------------
$ service restart packetbeat
----------------------------------------------------------------------

binary:

[source,shell]
----------------------------------------------------------------------
$ cd packetbeat-$PB_VERSION
$ ./packetbeat -c /etc/packetbeat/packetbeat.conf
----------------------------------------------------------------------


=== Kibana installation


https://www.elastic.co/products/kibana[Kibana] is a visualization application
that gets its data from Elasticsearch. It provides a customizable and
user-friendly UI in which you can combine various widget types to create your
own dashboards. The dashboards can be easily saved, shared and linked.

For this tutorial, we recommend to install Kibana on the same server as
Elasticsearch, but not required.

There are currently two versions of Kibana in use: Kibana3 and the newly
released Kibana4.  The Packetbeat team has extended Kibana3 to support new
panels specialized in visualizing network data and these new panels haven't yet
been ported to Kibana4. Until we have a good solution for Kibana4, this guide
uses the Kibana3 fork from the
http://github.com/packetbeat/packetbeat[Packetbeat GitHub account]:


[source,shell]
----------------------------------------------------------------------
$ curl -L -O https://github.com/packetbeat/kibana/releases/download/$KIBANA_VERSION.tar.gz
$ tar -xzvf $KIBANA_DIR.tar.gz
----------------------------------------------------------------------

If you prefer using Kibana4, please follow the Kibana installation instructions
from the https://www.elastic.co/products/kibana[Kibana Product Page].

Kibana3 is a pure Javascript application running fully in the browser. It
doesn't have or need a sever side part like most web applications do. Instead,
you only needed a web server to serve the Javascript files and the static
resources. For example, you can use python to create a simple web server:


[source,shell]
----------------------------------------------------------------------
$ cd {{version["kibana_dir"]}}
$ python -m SimpleHTTPServer
Serving HTTP on 0.0.0.0 port 8000 ...
----------------------------------------------------------------------

Now point your browser to port 8000 and you should see the Kibana web
interface. It will probably complain that it cannot reach Elasticsearch, like
in the following screenshot:



This is because 
http://en.wikipedia.org/wiki/Cross-origin_resource_sharing[CORS] is
disabled by default in recent versions of Elasticsearch, to respect the "secure
by default" philosophy. You can enable it by adding the following lines at the
end of your `/etc/elasticsearch/elasticsearch.yml` file:

[source,yaml]
----------------------------------------------------------------------
http.cors.enabled: true
http.cors.allow-origin: http://localhost:8000
----------------------------------------------------------------------


Make sure to replace `http://localhost:8000` with the URL under which you
access Kibana up to the first slash. Restart Elasticsearch:

[source,shell]
----------------------------------------------------------------------
$ sudo /etc/init.d/elasticsearch restart
----------------------------------------------------------------------

And try again to access Kibana in your browser. You should now see
Kibana's welcoming page.

=== Kibana dashboards

Kibana has about a dozen widget types that you can combine into pages to create
dashboards that are best for you.  We have created couple sample dashboards to
give you a good start and to demonstrate what is possible.

To load our sample pages, follow these steps:

[source,shell]
----------------------------------------------------------------------
$ curl -L -O https://github.com/packetbeat/dashboards/archive/v$DASHBOARDS_VERSION.tar.gz
$ tar xzvf v$DASHBOARDS_VERSION.tar.gz
$ cd dashboards-$DASHBOARDS_VERSION/
$ ./load.sh
----------------------------------------------------------------------

Enjoy!


